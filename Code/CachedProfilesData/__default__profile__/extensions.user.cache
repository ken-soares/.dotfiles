{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/koneko/.vscode/extensions/extensions.json","path":"/home/koneko/.vscode/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1685884385527,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"excludeObsolete":true,"validate":true,"productVersion":"1.78.2","productDate":"2023-05-10T14:47:05.613Z","productCommit":"b3e4e68a0bc097f0ae7907b217c1119af9e03435","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"siris01.catppuccin-theme","uuid":"23b56bbf-7be8-4a89-b3ae-85ca25fec971"},"manifest":{"name":"catppuccin-theme","displayName":"Catppuccin vscode theme","description":"Soothing pastel theme","version":"0.3.0","publisher":"Siris01","license":"MIT","repository":{"type":"git","url":"https://github.com/Siris01/catppuccin-vscode-theme"},"bugs":{"url":"https://github.com/Siris01/catppuccin-vscode-theme/issue"},"engines":{"vscode":"^1.13.0"},"categories":["Themes"],"keywords":["icon-theme","theme","catppuccin"],"homepage":"https://github.com/Siris01/catppuccin-vscode-theme","icon":"assets/logo.png","contributes":{"themes":[{"label":"Catppuccin Latte","uiTheme":"vs","path":"./catppuccin-latte.json"},{"label":"Catppuccin Latte Bordered","uiTheme":"vs","path":"./catppuccin-latte-bordered.json"},{"label":"Catppuccin Frappe","uiTheme":"vs","path":"./catppuccin-frappe.json"},{"label":"Catppuccin Frappe Bordered","uiTheme":"vs","path":"./catppuccin-frappe-bordered.json"},{"label":"Catppuccin Macchiato","uiTheme":"vs-dark","path":"./catppuccin-macchiato.json"},{"label":"Catppuccin Macchiato Bordered","uiTheme":"vs-dark","path":"./catppuccin-macchiato-bordered.json"},{"label":"Catppuccin Mocha","uiTheme":"vs-dark","path":"./catppuccin-mocha.json"},{"label":"Catppuccin Mocha Bordered","uiTheme":"vs-dark","path":"./catppuccin-mocha-bordered.json"},{"label":"Catppuccin latte Darker","uiTheme":"vs","path":"./catppuccin-latte-darker.json"},{"label":"Catppuccin Frappe Darker","uiTheme":"vs-dark","path":"./catppuccin-frappe-darker.json"},{"label":"Catppuccin Macchiato Darker","uiTheme":"vs-dark","path":"./catppuccin-macchiato-darker.json"},{"label":"Catppuccin Mocha Darker","uiTheme":"vs-dark","path":"./catppuccin-mocha-darker.json"},{"label":"Catppuccin latte Darker Bordered","uiTheme":"vs","path":"./catppuccin-latte-darker-bordered.json"},{"label":"Catppuccin Frappe Darker Bordered","uiTheme":"vs-dark","path":"./catppuccin-frappe-darker-bordered.json"},{"label":"Catppuccin Macchiato Darker Bordered","uiTheme":"vs-dark","path":"./catppuccin-macchiato-darker-bordered.json"},{"label":"Catppuccin Mocha Darker Bordered","uiTheme":"vs-dark","path":"./catppuccin-mocha-darker-bordered.json"}],"iconThemes":[{"id":"ayu","label":"Ayu","path":"./ayu-icons.json"}]},"scripts":{"build":"ts-node ./src/build.ts","package":"vsce package","start":"cd colours && npm run build && cd .. && npm run build && npm run package","publish":"vsce publish"},"devDependencies":{"@types/node":"^18.15.10","ts-node":"^10.9.1","typescript":"^5.0.2","vsce":"^1.96.1"}},"location":{"$mid":1,"path":"/home/koneko/.vscode/extensions/siris01.catppuccin-theme-0.3.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"23b56bbf-7be8-4a89-b3ae-85ca25fec971","publisherId":"fab8b8f6-cfe5-423e-aff6-e66286dfb44f","publisherDisplayName":"Siris01","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1685877399762},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"vscodevim.vim","uuid":"d96e79c6-8b25-4be3-8545-0e0ecefcae03"},"manifest":{"name":"vim","displayName":"Vim","description":"Vim emulation for Visual Studio Code","icon":"images/icon.png","version":"1.25.2","publisher":"vscodevim","galleryBanner":{"color":"#e3f4ff","theme":"light"},"license":"MIT","keywords":["vim","vi","vscodevim"],"repository":{"type":"git","url":"https://github.com/VSCodeVim/Vim.git"},"homepage":"https://github.com/VSCodeVim/Vim","bugs":{"url":"https://github.com/VSCodeVim/Vim/issues"},"engines":{"vscode":"^1.74.0"},"categories":["Other","Keymaps"],"extensionKind":["ui"],"sideEffects":false,"activationEvents":["*","onCommand:type"],"qna":"https://vscodevim.herokuapp.com/","main":"./out/extension","browser":"./out/extensionWeb","capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"contributes":{"commands":[{"command":"toggleVim","title":"Vim: Toggle Vim Mode"},{"command":"vim.showQuickpickCmdLine","title":"Vim: Show Command Line"},{"command":"vim.editVimrc","enablement":"!isWeb","title":"Vim: Edit .vimrc"}],"keybindings":[{"key":"Escape","command":"extension.vim_escape","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Escape","command":"notebook.cell.quitEdit","when":"inputFocus && notebookEditorFocused && !editorHasSelection && !editorHoverVisible && vim.active && vim.mode == 'Normal'"},{"key":"Home","command":"extension.vim_home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"ctrl+home","command":"extension.vim_ctrl+home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"End","command":"extension.vim_end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"ctrl+end","command":"extension.vim_ctrl+end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"Insert","command":"extension.vim_insert","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Backspace","command":"extension.vim_backspace","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Delete","command":"extension.vim_delete","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"tab","command":"extension.vim_tab","when":"editorFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"shift+tab","command":"extension.vim_shift+tab","when":"editorFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"left","command":"extension.vim_left","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"right","command":"extension.vim_right","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"up","command":"extension.vim_up","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !parameterHintsVisible"},{"key":"down","command":"extension.vim_down","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !parameterHintsVisible"},{"key":"g g","command":"list.focusFirst","when":"listFocus && !inputFocus"},{"key":"h","command":"list.collapse","when":"listFocus && !inputFocus"},{"key":"j","command":"list.focusDown","when":"listFocus && !inputFocus"},{"key":"k","command":"list.focusUp","when":"listFocus && !inputFocus"},{"key":"l","command":"list.select","when":"listFocus && !inputFocus"},{"key":"o","command":"list.toggleExpand","when":"listFocus && !inputFocus"},{"key":"/","command":"list.toggleKeyboardNavigation","when":"listFocus && !inputFocus && listSupportsKeyboardNavigation"},{"key":"ctrl+a","command":"extension.vim_ctrl+a","when":"editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"},{"key":"ctrl+b","command":"extension.vim_ctrl+b","when":"editorTextFocus && vim.active && vim.use<C-b> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+c","command":"extension.vim_ctrl+c","when":"editorTextFocus && vim.active && vim.use<C-c> && !inDebugRepl && vim.overrideCtrlC"},{"key":"ctrl+d","command":"extension.vim_ctrl+d","when":"editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"},{"key":"ctrl+d","command":"list.focusPageDown","when":"listFocus && !inputFocus"},{"key":"ctrl+e","command":"extension.vim_ctrl+e","when":"editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"},{"key":"ctrl+f","command":"extension.vim_ctrl+f","when":"editorTextFocus && vim.active && vim.use<C-f> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+g","command":"extension.vim_ctrl+g","when":"editorTextFocus && vim.active && vim.use<C-g> && !inDebugRepl"},{"key":"ctrl+h","command":"extension.vim_ctrl+h","when":"editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"},{"key":"ctrl+i","command":"extension.vim_ctrl+i","when":"editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"},{"key":"ctrl+j","command":"extension.vim_ctrl+j","when":"editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"},{"key":"ctrl+k","command":"extension.vim_ctrl+k","when":"editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"},{"key":"ctrl+l","command":"extension.vim_navigateCtrlL","when":"editorTextFocus && vim.active && vim.use<C-l> && !inDebugRepl"},{"key":"ctrl+m","command":"extension.vim_ctrl+m","when":"editorTextFocus && vim.active && vim.use<C-m> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-m> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-m> && !inDebugRepl"},{"key":"ctrl+n","command":"extension.vim_ctrl+n","when":"editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-n> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-n> && !inDebugRepl"},{"key":"ctrl+o","command":"extension.vim_ctrl+o","when":"editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"},{"key":"ctrl+p","command":"extension.vim_ctrl+p","when":"suggestWidgetVisible && vim.active && vim.use<C-p> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-p> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-p> && !inDebugRepl"},{"key":"ctrl+q","command":"extension.vim_winCtrlQ","when":"editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"},{"key":"ctrl+r","command":"extension.vim_ctrl+r","when":"editorTextFocus && vim.active && vim.use<C-r> && !inDebugRepl"},{"key":"ctrl+s","command":"extension.vim_ctrl+s","when":"editorTextFocus && vim.active && vim.use<C-s> && !inDebugRepl"},{"key":"ctrl+t","command":"extension.vim_ctrl+t","when":"editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"},{"key":"ctrl+u","command":"extension.vim_ctrl+u","when":"editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"},{"key":"ctrl+u","command":"list.focusPageUp","when":"listFocus && !inputFocus"},{"key":"ctrl+v","command":"extension.vim_ctrl+v","when":"editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"},{"key":"ctrl+w","command":"extension.vim_ctrl+w","when":"editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"},{"key":"ctrl+x","command":"extension.vim_ctrl+x","when":"editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"},{"key":"ctrl+y","command":"extension.vim_ctrl+y","when":"editorTextFocus && vim.active && vim.use<C-y> && !inDebugRepl"},{"key":"ctrl+z","command":"extension.vim_ctrl+z","when":"editorTextFocus && vim.active && vim.use<C-z> && !inDebugRepl"},{"key":"ctrl+6","command":"extension.vim_ctrl+6","when":"editorTextFocus && vim.active && vim.use<C-6> && !inDebugRepl"},{"key":"ctrl+^","command":"extension.vim_ctrl+^","when":"editorTextFocus && vim.active && vim.use<C-^> && !inDebugRepl"},{"key":"ctrl+[","command":"extension.vim_ctrl+[","when":"editorTextFocus && vim.active && vim.use<C-[> && !inDebugRepl"},{"key":"ctrl+]","command":"extension.vim_ctrl+]","when":"editorTextFocus && vim.active && vim.use<C-]> && !inDebugRepl"},{"key":"ctrl+shift+2","command":"extension.vim_ctrl+shift+2","when":"editorTextFocus && vim.active && vim.use<C-shift+2>"},{"key":"ctrl+up","command":"extension.vim_ctrl+up","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+down","command":"extension.vim_ctrl+down","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+left","command":"extension.vim_ctrl+left","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+right","command":"extension.vim_ctrl+right","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+pagedown","command":"extension.vim_ctrl+pagedown","when":"editorTextFocus && vim.active && vim.use<C-pagedown> && !inDebugRepl"},{"key":"ctrl+pageup","command":"extension.vim_ctrl+pageup","when":"editorTextFocus && vim.active && vim.use<C-pageup> && !inDebugRepl"},{"key":"ctrl+space","command":"extension.vim_ctrl+space","when":"editorTextFocus && vim.active && vim.use<C-space> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"shift+G","command":"list.focusLast","when":"listFocus && !inputFocus"},{"key":"ctrl+backspace","command":"extension.vim_ctrl+backspace","when":"editorTextFocus && vim.active && vim.use<C-BS> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"shift+backspace","command":"extension.vim_shift+backspace","when":"editorTextFocus && vim.active && vim.use<S-BS> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"cmd+left","command":"extension.vim_cmd+left","when":"editorTextFocus && vim.active && vim.use<D-left> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+right","command":"extension.vim_cmd+right","when":"editorTextFocus && vim.active && vim.use<D-right> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+a","command":"extension.vim_cmd+a","when":"editorTextFocus && vim.active && vim.use<D-a> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+c","command":"extension.vim_cmd+c","when":"editorTextFocus && vim.active && vim.use<D-c> && vim.overrideCopy && !inDebugRepl"},{"key":"cmd+d","command":"extension.vim_cmd+d","when":"editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"},{"key":"cmd+v","command":"extension.vim_cmd+v","when":"editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'CommandlineInProgress' && !inDebugRepl || editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'SearchInProgressMode' && !inDebugRepl"},{"key":"ctrl+alt+down","linux":"shift+alt+down","mac":"cmd+alt+down","command":"extension.vim_cmd+alt+down","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"ctrl+alt+up","linux":"shift+alt+up","mac":"cmd+alt+up","command":"extension.vim_cmd+alt+up","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"j","command":"notebook.focusNextEditor","when":"vim.mode == 'Normal' && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"},{"key":"k","command":"notebook.focusPreviousEditor","when":"vim.mode == 'Normal' && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"}],"configuration":{"title":"Vim","type":"object","properties":{"vim.normalModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Normal mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.normalModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive remapped keys in Normal mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.operatorPendingModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in OperatorPending mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.operatorPendingModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive remapped keys in OperatorPending mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.useCtrlKeys":{"type":"boolean","markdownDescription":"Enable some Vim Ctrl key commands that override otherwise common operations, like `Ctrl+C`.","default":true},"vim.leader":{"type":"string","markdownDescription":"What key should `<leader>` map to in remappings?","default":"\\"},"vim.searchHighlightColor":{"type":"string","markdownDescription":"Background color of non-current search matches. The color must not be opaque so as not to hide underlying decorations. Uses `#editor.findMatchHighlightColor#` from current theme if undefined."},"vim.searchHighlightTextColor":{"type":"string","markdownDescription":"Foreground color of non-current search matches."},"vim.searchMatchColor":{"type":"string","markdownDescription":"Background color of the current match. Uses `#editor.findMatchColor#` from current theme if undefined."},"vim.searchMatchTextColor":{"type":"string","markdownDescription":"Foreground color of the current match."},"vim.substitutionColor":{"type":"string","markdownDescription":"Background color of substituted text when `#editor.inccommand#` is enabled. Uses `#editor.findMatchColor#` from current theme if undefined."},"vim.substitutionTextColor":{"type":"string","markdownDescription":"Foreground color of substituted text when `#editor.inccommand#` is enabled."},"vim.highlightedyank.enable":{"type":"boolean","description":"Enable highlighting when yanking.","default":false},"vim.highlightedyank.color":{"type":"string","description":"Background color of yanked text. The color must not be opaque so as not to hide underlying decorations.","default":"rgba(250, 240, 170, 0.5)"},"vim.highlightedyank.textColor":{"type":"string","description":"Foreground color of yanked text."},"vim.highlightedyank.duration":{"type":"number","description":"Duration in milliseconds of the yank highlight.","default":200,"minimum":1},"vim.useSystemClipboard":{"type":"boolean","description":"Use system clipboard for unnamed register.","default":false},"vim.overrideCopy":{"type":"boolean","description":"Override VS Code's copy command with our own copy command, which works better with VSCodeVim. Turn this off if copying is not working.","default":true},"vim.insertModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Insert mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.insertModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for Insert mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.visualModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Visual mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.visualModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for Visual mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.commandLineModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in command line mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.commandLineModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for command line mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.textwidth":{"type":"number","markdownDescription":"Width to word-wrap to when using `gq`.","default":80,"scope":"language-overridable","minimum":1},"vim.timeout":{"type":"number","description":"Timeout in milliseconds for remapped commands.","default":1000,"minimum":0},"vim.maxmapdepth":{"type":"number","description":"Maximum number of times a mapping is done without resulting in a character to be used.","default":1000,"minimum":0},"vim.scroll":{"type":"number","markdownDescription":"Number of lines to scroll with `Ctrl-U` and `Ctrl-D` commands. Set to 0 to use a half page scroll.","default":0,"minimum":0},"vim.showcmd":{"type":"boolean","description":"Show the text of any command you are in the middle of writing.","default":true},"vim.showmodename":{"type":"boolean","description":"Show the name of the current mode in the statusbar.","default":true},"vim.iskeyword":{"type":"string","markdownDescription":"Keywords contain alphanumeric characters and '_'. If not configured, `#editor.wordSeparators#` is used."},"vim.ignorecase":{"type":"boolean","description":"Ignore case in search patterns.","default":true},"vim.smartcase":{"type":"boolean","markdownDescription":"Override the `ignorecase` option if the search pattern contains upper case characters.","default":true},"vim.matchpairs":{"type":"string","markdownDescription":"Characters that form pairs. The % command jumps from one to the other. Only character pairs are allowed that are different, thus you cannot jump between two double quotes. The characters must be separated by a colon. The pairs must be separated by a comma.","default":"(:),{:},[:]"},"vim.camelCaseMotion.enable":{"type":"boolean","markdownDescription":"Enable the [CamelCaseMotion](https://github.com/bkad/CamelCaseMotion) plugin for Vim.","default":false},"vim.easymotion":{"type":"boolean","markdownDescription":"Enable the [EasyMotion](https://github.com/easymotion/vim-easymotion) plugin for Vim.","default":false},"vim.easymotionMarkerBackgroundColor":{"type":"string","default":"#0000","description":"Set a custom background color for EasyMotion markers."},"vim.easymotionMarkerForegroundColorOneChar":{"type":"string","default":"#ff0000","description":"Set a custom color for the text on one character long markers."},"vim.easymotionMarkerForegroundColorTwoCharFirst":{"type":"string","default":"#ffb400","description":"Set a custom color for the first character on two character long markers."},"vim.easymotionMarkerForegroundColorTwoCharSecond":{"type":"string","default":"#b98300","description":"Set a custom color for the second character on two character long markers."},"vim.easymotionIncSearchForegroundColor":{"type":"string","default":"#7fbf00","markdownDescription":"Set a custom color for the easymotion search n-character (default `<leader><leader>/`)."},"vim.easymotionDimColor":{"type":"string","default":"#777777","markdownDescription":"Set a custom color for the easymotion dimmed characters when `#vim.easymotionDimBackground#` is set to true."},"vim.easymotionDimBackground":{"type":"boolean","description":"Whether to dim other text while markers are visible.","default":true},"vim.easymotionMarkerFontWeight":{"type":"string","description":"Set the font weight of the marker text.","default":"bold"},"vim.easymotionKeys":{"type":"string","description":"Set the characters used for jump marker name.","default":"hklyuiopnm,qwertzxcvbasdgjf;"},"vim.easymotionJumpToAnywhereRegex":{"type":"string","description":"Regex matches for JumpToAnywhere motion.","default":"\\b[A-Za-z0-9]|[A-Za-z0-9]\\b|_.|#.|[a-z][A-Z]"},"vim.replaceWithRegister":{"type":"boolean","markdownDescription":"Enable the [ReplaceWithRegister](https://github.com/vim-scripts/ReplaceWithRegister) plugin for Vim.","default":false},"vim.smartRelativeLine":{"type":"boolean","markdownDescription":"`#editor.lineNumbers#` is determined by the active Vim mode, absolute when in insert mode, relative otherwise.","default":false},"vim.targets.enable":{"type":"boolean","markdownDescription":"Enable [targets.vim](https://github.com/wellle/targets.vim#quote-text-objects) plugin (not fully implemented yet).","default":false},"vim.targets.bracketObjects.enable":{"type":"boolean","markdownDescription":"Enable last/next movements for bracket objects.","default":true},"vim.targets.smartQuotes.enable":{"type":"boolean","markdownDescription":"Enable the smart quotes movements from [targets.vim](https://github.com/wellle/targets.vim#quote-text-objects).","default":true},"vim.targets.smartQuotes.breakThroughLines":{"type":"boolean","markdownDescription":"Whether to break through lines when using [n]ext/[l]ast motion, see [targets.vim#next-and-last-quote](https://github.com/wellle/targets.vim#next-and-last-quote).","default":true},"vim.targets.smartQuotes.aIncludesSurroundingSpaces":{"type":"boolean","markdownDescription":"Whether to use default Vim behavior when using `a` (e.g. `da'`) which include surrounding spaces, or not, as for other text objects.","default":true},"vim.sneak":{"type":"boolean","markdownDescription":"Enable the [Sneak](https://github.com/justinmk/vim-sneak) plugin for Vim.","default":false},"vim.sneakUseIgnorecaseAndSmartcase":{"type":"boolean","markdownDescription":"Case sensitivity is determined by `#vim.ignorecase#` and `#vim.smartcase#`.","default":false},"vim.sneakReplacesF":{"type":"boolean","markdownDescription":"Use single-character [Sneak](https://github.com/justinmk/vim-sneak) instead of Vim's native `f`.","default":false},"vim.surround":{"type":"boolean","markdownDescription":"Enable the [Surround](https://github.com/tpope/vim-surround) plugin for Vim.","default":true},"vim.argumentObjectSeparators":{"type":"array","items":{"type":"string"},"markdownDescription":"Set separators for the argument text object.","default":[","]},"vim.argumentObjectOpeningDelimiters":{"type":"array","items":{"type":"string"},"markdownDescription":"Set opening delimiters for the argument text object.","default":["(","["]},"vim.argumentObjectClosingDelimiters":{"type":"array","items":{"type":"string"},"markdownDescription":"Set closing delimiters for the argument text object.","default":[")","]"]},"vim.hlsearch":{"type":"boolean","description":"Show all matches of the most recent search pattern.","default":false},"vim.inccommand":{"type":"string","markdownDescription":"Show the effects of the `:substitute` command as you type.","default":"replace","enum":["","append","replace"],"enumDescriptions":["Don't show substitutions","Show substitutions after matched text","Replace matched text with substitutions"]},"vim.incsearch":{"type":"boolean","markdownDescription":"Show where a `/` or `?` search matches as you type it.","default":true},"vim.history":{"type":"number","description":"How much search or command history should be remembered.","default":50,"minimum":1},"vim.autoindent":{"type":"boolean","description":"Indent code automatically.","default":true},"vim.joinspaces":{"type":"boolean","description":"Add two spaces after '.', '?', and '!' when joining or reformatting.","default":true},"vim.startInInsertMode":{"type":"boolean","description":"Start in Insert mode."},"vim.handleKeys":{"type":"object","description":"Delegate certain key combinations back to VSCode to be handled natively.","default":{"<C-d>":true,"<C-s>":false,"<C-z>":false}},"vim.statusBarColorControl":{"type":"boolean","markdownDescription":"Allow VSCodeVim to change status bar color based on mode. **NOTE:** Using this feature will have a negative impact on performance.","default":false},"vim.statusBarColors.normal":{"type":["string","array"],"description":"Status bar color when in Normal mode.","default":"#005f5f"},"vim.statusBarColors.insert":{"type":["string","array"],"description":"Status bar color when in Insert mode.","default":"#5f0000"},"vim.statusBarColors.visual":{"type":["string","array"],"description":"Status bar color when in Visual mode.","default":"#5f00af"},"vim.statusBarColors.visualline":{"type":["string","array"],"description":"Status bar color when in VisualLine mode.","default":"#005f5f"},"vim.statusBarColors.visualblock":{"type":["string","array"],"description":"Status bar color when in VisualBlock mode.","default":"#86592d"},"vim.statusBarColors.replace":{"type":["string","array"],"description":"Status bar color when in Replace mode.","default":"#00000"},"vim.statusBarColors.commandlineinprogress":{"type":["string","array"],"description":"Status bar color when in CommandLineInProgress mode.","default":"#007acc"},"vim.statusBarColors.searchinprogressmode":{"type":["string","array"],"description":"Status bar color when in SearchInProgress mode.","default":"#007acc"},"vim.statusBarColors.easymotionmode":{"type":["string","array"],"description":"Status bar color when in EasyMotion mode.","default":"#007acc"},"vim.statusBarColors.easymotioninputmode":{"type":["string","array"],"description":"Status bar color when in EasyMotionInput mode.","default":"#007acc"},"vim.statusBarColors.surroundinputmode":{"type":["string","array"],"description":"Status bar color when in SurroundInput mode.","default":"#007acc"},"vim.visualstar":{"type":"boolean","markdownDescription":"In Visual mode, start a search with `*` or `#` using the current selection.","default":false},"vim.changeWordIncludesWhitespace":{"type":"boolean","description":"Includes trailing whitespace when changing word.","default":false},"vim.foldfix":{"type":"boolean","description":"Uses a hack to move around folds properly.","default":false},"vim.mouseSelectionGoesIntoVisualMode":{"type":"boolean","description":"If enabled, dragging with the mouse activates Visual mode.","default":true},"vim.disableExtension":{"type":"boolean","description":"Disables the VSCodeVim extension. The extension will continue to be loaded and activated, but Vim functionality will be disabled.","default":false},"vim.enableNeovim":{"type":"boolean","markdownDescription":"Use Neovim to execute Ex commands. You should restart VS Code after enabling/disabling this for the changes to take effect. **NOTE:** Neovim version 0.2.0 or greater must be installed, and if the executable is not on your PATH, `#vim.neovimPath#` must be set.","default":false},"vim.neovimPath":{"type":"string","markdownDescription":"Path to Neovim executable. For example, `/usr/bin/nvim`, or  `C:\\Program Files\\Neovim\\bin\\nvim.exe`.","default":"","scope":"machine"},"vim.neovimUseConfigFile":{"type":"boolean","markdownDescription":"Use a config file for Neovim, specified by `vim.neovimConfigPath`.","default":false},"vim.neovimConfigPath":{"type":"string","markdownDescription":"Path to Neovim configuration file. `vim.neovimUseConfigFile` must be enabled. If path is left blank, Neovim will use its default config path, i.e. `~/.config/nvim/init.vim` or 'C:\\Users\\USERNAME\\AppData\\Local\\nvim\\init.vim'.","default":"","scope":"machine"},"vim.vimrc.enable":{"type":"boolean","markdownDescription":"Use key mappings from a `.vimrc` file.","default":false},"vim.vimrc.path":{"type":"string","markdownDescription":"Path to a Vim configuration file. If unset, it will check for `$HOME/.vscodevimrc`, `$HOME/.vimrc`, `$HOME/_vimrc`, and `$HOME/.config/nvim/init.vim`, in that order."},"vim.substituteGlobalFlag":{"type":"boolean","markdownDescription":"Automatically apply the global flag, `/g`, to substitute commands. When set to true, use `/g` to mean only first match should be replaced.","default":false,"markdownDeprecationMessage":"**Deprecated**: Please use `#vim.gdefault#` instead.","deprecationMessage":"Deprecated: Please use vim.gdefault instead."},"vim.gdefault":{"type":"boolean","markdownDescription":"Automatically apply the global flag, `/g`, to substitute commands. When set to true, use `/g` to mean only first match should be replaced.","default":false},"vim.cursorStylePerMode.normal":{"type":"string","description":"Cursor style for Normal mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.insert":{"type":"string","description":"Cursor style for Insert mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.replace":{"type":"string","description":"Cursor style for Replace mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visual":{"type":"string","description":"Cursor style for Visual mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visualline":{"type":"string","description":"Cursor style for VisualLine mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visualblock":{"type":"string","description":"Cursor style for VisualBlock mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.autoSwitchInputMethod.enable":{"type":"boolean","description":"If enabled, the input method switches automatically when the mode changes.","default":false},"vim.autoSwitchInputMethod.defaultIM":{"type":"string","markdownDescription":"The input method for your normal mode, find more information [here](https://github.com/VSCodeVim/Vim#input-method).","default":"","scope":"machine"},"vim.autoSwitchInputMethod.switchIMCmd":{"type":"string","description":"The shell command to switch input method.","default":"/path/to/im-select {im}","scope":"machine"},"vim.autoSwitchInputMethod.obtainIMCmd":{"type":"string","description":"The shell command to get current input method.","default":"/path/to/im-select","scope":"machine"},"vim.whichwrap":{"type":"string","description":"Comma-separated list of motion keys that should wrap to next/previous line.","default":"b,s"},"vim.report":{"type":"number","description":"Threshold for reporting number of lines changed.","default":2,"minimum":1},"vim.digraphs":{"type":"object","description":"Custom digraph shortcuts for inserting special characters, expressed as UTF16 code points.","default":{}},"vim.wrapscan":{"type":"boolean","description":"Searches wrap around the end of the file.","default":true},"vim.startofline":{"type":"boolean","markdownDescription":"When `true` the commands listed below move the cursor to the first non-blank of the line.  When `false` the cursor is kept in the same column (if possible).  This applies to the commands: `<C-d>`, `<C-u>`, `<C-b>`, `<C-f>`, `G`, `H`, `M`, `L`, `gg`, and to the commands `d`, `<<` and `>>` with a linewise operator.","default":true},"vim.showMarksInGutter":{"type":"boolean","description":"Show the currently set mark(s) in the gutter.","default":false},"vim.shell":{"type":"string","description":"Path to the shell to use for `!` and `:!` commands.","default":""}}},"languages":[{"id":"vimrc","extensions":[".vimrc"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"vimrc","scopeName":"source.vimrc","path":"./syntaxes/vimrc.tmLanguage.json"}]},"scripts":{"vscode:prepublish":"gulp build","build":"gulp build","build-dev":"gulp build-dev","build-test":"gulp prepare-test","test":"node ./out/test/runTest.js","lint":"tslint --project .","lint:fix":"tslint --project . --fix","prettier":"prettier --write .","prettier:check":"prettier --check .","watch":"webpack -c webpack.dev.js --watch","package":"yarn run vsce package --yarn --allow-star-activation","prepare":"husky install"},"dependencies":{"diff-match-patch":"1.0.5","lodash":"^4.17.21","neovim":"4.10.1","os-browserify":"0.3.0","parsimmon":"^1.18.0","path-browserify":"1.0.1","process":"0.11.10","queue":"^6.0.2","untildify":"4.0.0","util":"0.12.5"},"devDependencies":{"@types/diff":"5.0.2","@types/diff-match-patch":"1.0.32","@types/glob":"8.1.0","@types/lodash":"4.14.191","@types/mocha":"10.0.1","@types/node":"16.18.13","@types/parsimmon":"1.10.6","@types/sinon":"10.0.13","@types/vscode":"1.74.0","@vscode/test-electron":"2.3.0","circular-dependency-plugin":"^5.2.2","clean-webpack-plugin":"4.0.0","event-stream":"4.0.1","fork-ts-checker-webpack-plugin":"7.3.0","gulp":"4.0.2","gulp-bump":"3.2.0","gulp-git":"2.10.1","gulp-tag-version":"1.3.1","gulp-typescript":"5.0.1","husky":"^8.0.3","lint-staged":"^13.1.2","minimist":"1.2.8","mocha":"10.2.0","plugin-error":"2.0.1","prettier":"2.8.4","sinon":"15.0.1","ts-loader":"9.4.2","tslint":"6.1.3","typescript":"4.9.5","vsce":"2.15.0","webpack":"5.75.0","webpack-cli":"5.0.1","webpack-merge":"5.8.0","webpack-stream":"7.0.0"},"lint-staged":{"*.{ts,js,json,md,yml}":"prettier --write","*.{ts}":"tslint --fix"}},"location":{"$mid":1,"path":"/home/koneko/.vscode/extensions/vscodevim.vim-1.25.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"d96e79c6-8b25-4be3-8545-0e0ecefcae03","publisherId":"5d63889b-1b67-4b1f-8350-4f1dce041a26","publisherDisplayName":"vscodevim","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1685877431547,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"leonardssh.vscord","uuid":"20675c06-f272-4cc8-8611-83ebb5583c5a"},"manifest":{"name":"vscord","displayName":"Discord Rich Presence","version":"5.1.10","description":"Highly customizable Discord Rich Presence extension for Visual Studio Code","main":"dist/extension.js","repository":"github:LeonardSSH/vscord","publisher":"LeonardSSH","contributors":["xhayper <hayper1919@gmail.com>"],"license":"MIT","private":true,"icon":"assets/icon.png","bugs":{"url":"https://github.com/LeonardSSH/vscord/issues"},"homepage":"https://github.com/LeonardSSH/vscord#readme","keywords":["discord","rich","presence","rich presence","rpc"],"categories":["Visualization","Other"],"extensionKind":["ui","workspace"],"galleryBanner":{"color":"#5865F2","theme":"dark"},"activationEvents":["onStartupFinished"],"scripts":{"vscode:prepublish":"pnpm run package","package":"tsup","watch":"tsup --watch"},"devDependencies":{"@types/git-url-parse":"^9.0.1","@types/node":"16.x","@types/vscode":"1.57.0","@xhayper/discord-rpc":"^1.0.17","discord-api-types":"^0.37.43","filesize":"^10.0.7","git-url-parse":"^13.1.0","source-map-support":"^0.5.21","tsup":"^6.7.0","typescript":"^5.0.4"},"engines":{"vscode":"^1.57.0"},"contributes":{"commands":[{"command":"vscord.enable","title":"Enable Discord Presence","category":"VSCord"},{"command":"vscord.disable","title":"Disable Discord Presence","category":"VSCord"},{"command":"vscord.workspace.enable","title":"Enable Discord Presence in the current workspace","category":"VSCord"},{"command":"vscord.workspace.disable","title":"Disable Discord Presence in the current workspace","category":"VSCord"},{"command":"vscord.disconnect","title":"Disconnect from Discord Gateway","category":"VSCord"},{"command":"vscord.reconnect","title":"Reconnect to Discord Gateway","category":"VSCord"},{"command":"vscord.enablePrivacyMode","title":"Enable Privacy Mode","category":"VSCord"},{"command":"vscord.disablePrivacyMode","title":"Disable Privacy Mode","category":"VSCord"}],"configuration":[{"title":"Extension","type":"object","properties":{"vscord.enabled":{"type":"boolean","default":true,"description":"Is the extension enabled?","order":0},"vscord.app.name":{"type":"string","enum":["Code","Visual Studio Code","VSCodium","Custom"],"default":"Code","description":"Choose the name you want the application to use.\nChoosing \"Custom\" will make it so it use the \"rpc.id\" as application id","order":2},"vscord.app.id":{"type":"string","default":"782685898163617802","description":"Application id that will be used when `appName` is \"Custom\" or when `appName` is invalid","order":3},"vscord.app.privacyMode.enable":{"type":"boolean","default":false,"description":"Should we hide the github repository, the file name and the workspace name?","order":4},"vscord.app.whitelistEnabled":{"type":"boolean","default":false,"description":"Is the whitelist enabled?","order":5},"vscord.app.whitelistIsBlacklist":{"type":"boolean","default":false,"description":"Switches the whitelist to a blacklist.","order":6},"vscord.app.whitelist":{"type":"array","default":[],"uniqueItems":true,"items":{"type":"string"},"description":"List of discord user ids that will be able to use the extension.","order":7}}},{"title":"Status","type":"object","properties":{"vscord.status.showElapsedTime":{"type":"boolean","default":true,"description":"Should elapsed time be shown?"},"vscord.status.resetElapsedTimePerFile":{"type":"boolean","default":false,"description":"Should we reset the elapsed time after switching file?"},"vscord.status.problems.enabled":{"type":"boolean","default":true,"description":"Should we count the problems?"},"vscord.status.problems.text":{"type":"string","default":"- {problems_count} problems found","description":"This text will be shown when there is a problem."},"vscord.status.problems.countedSeverities":{"type":"array","uniqueItems":true,"items":{"type":"string","enum":["error","warning","info","hint"]},"default":["error","warning"],"description":"List of problem level to count for `problems_count`."},"vscord.status.idle.enabled":{"type":"boolean","default":true,"description":"Should we enable the idle status?"},"vscord.status.idle.check":{"type":"boolean","default":true,"description":"Should we check when you are idling?"},"vscord.status.idle.disconnectOnIdle":{"type":"boolean","default":false,"description":"Should going idle disconnect you from discord gateway?."},"vscord.status.idle.resetElapsedTime":{"type":"boolean","default":false,"description":"Should going idle reset the elapsed time?."},"vscord.status.idle.timeout":{"type":"number","default":300,"description":"Time in seconds before the user is considered idle."}}},{"title":"Ignore","type":"object","properties":{"vscord.ignore.workspaces":{"type":"array","uniqueItems":true,"items":{"type":"string"},"default":[],"description":"A list of workspace (name / path) to ignore."},"vscord.ignore.workspacesText":{"type":["string","object"],"description":"The text / object to show in the status when current workspace is ignored, when using the object, key is workspace name and value is the text."},"vscord.ignore.repositories":{"type":"array","uniqueItems":true,"items":{"type":"string"},"default":[],"description":"A list of repository name to ignore."},"vscord.ignore.organizations":{"type":"array","uniqueItems":true,"items":{"type":"string"},"default":[],"description":"A list of git organizations to ignore."},"vscord.ignore.gitHosts":{"type":"array","uniqueItems":true,"items":{"type":"string"},"default":[],"description":"A list of git host to ignore."}}},{"title":"Details","type":"object","properties":{"vscord.status.details.enabled":{"type":"boolean","default":true,"description":"Should details be shown?"},"vscord.status.details.idle.enabled":{"type":"boolean","default":true,"description":"Should details be shown when idling?"},"vscord.status.details.text.idle":{"type":"string","default":"Idling","description":"The text to show when idling."},"vscord.status.details.text.editing":{"type":"string","default":"In {workspace} {problems}","description":"The text to show when editing a file."},"vscord.status.details.text.debugging":{"type":"string","default":"Debugging {file_name}{file_extension}","description":"The text to show when debugging."},"vscord.status.details.text.viewing":{"type":"string","default":"In {workspace} {problems}","description":"The text to show when viewing a file."},"vscord.status.details.text.notInFile":{"type":"string","default":"Not in a file!","description":"The text to show when you are not in a file."},"vscord.status.details.text.noWorkSpaceText":{"type":"string","default":"no workspace","description":"The text to show when you are not in a workspace and there is no workspace text."}}},{"title":"State","type":"object","properties":{"vscord.status.state.enabled":{"type":"boolean","default":true,"description":"Should state be shown?"},"vscord.status.state.idle.enabled":{"type":"boolean","default":true,"description":"Should state be shown when idling?"},"vscord.status.state.text.idle":{"type":"string","default":"","description":"The text to show when idling."},"vscord.status.state.text.editing":{"type":"string","default":"Working on {file_name}{file_extension}:{current_line}:{current_column}","description":"The text to show when editting a file."},"vscord.status.state.text.debugging":{"type":"string","default":"Debugging: {workspace}","description":"The text to show when debugging."},"vscord.status.state.text.viewing":{"type":"string","default":"Viewing {file_name}{file_extension}","description":"The text to show when viewing a file."},"vscord.status.state.text.notInFile":{"type":"string","default":"","description":"The text to show when you are not in a file."},"vscord.status.state.text.noWorkspaceFound":{"type":"string","default":"No workspace.","description":"The text to show when no workspace is found."}}},{"title":"Image","type":"object","properties":{"vscord.status.image.large.idle.key":{"type":"string","default":"https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/idle-{app_id}.png","description":"The image url to use when idling"},"vscord.status.image.large.idle.text":{"type":"string","default":"Idling","description":"The large text to show when idling."},"vscord.status.image.large.viewing.key":{"type":"string","default":"https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/{lang}.png","description":"The image url to use when viewing a file."},"vscord.status.image.large.viewing.text":{"type":"string","default":"Viewing a {LANG} file","description":"The large text to show when viewing a file."},"vscord.status.image.large.editing.key":{"type":"string","default":"https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/{lang}.png","description":"The image url to use when editing a file."},"vscord.status.image.large.editing.text":{"type":"string","default":"Editing a {LANG} file","description":"The large text to show when editing a file."},"vscord.status.image.large.debugging.key":{"type":"string","default":"https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/debugging.png","description":"The image url to use when debugging."},"vscord.status.image.large.debugging.text":{"type":"string","default":"Debugging a {LANG} file","description":"The large text to show when debugging"},"vscord.status.image.large.notInFile.key":{"type":"string","default":"https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/idle-{app_id}.png","description":"The image url to use when you are not in a file."},"vscord.status.image.large.notInFile.text":{"type":"string","default":"","description":"The lage text to show when you are not in a file."},"vscord.status.image.small.idle.key":{"type":"string","default":"https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/idle.png","description":"The image url to use when idling."},"vscord.status.image.small.idle.text":{"type":"string","default":"zZz","description":"The small text to show when idling."},"vscord.status.image.small.viewing.key":{"type":"string","default":"https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/{app_id}.png","description":"The image url to use when viewing a file."},"vscord.status.image.small.viewing.text":{"type":"string","default":"{app_name}","description":"The small text to show when viewing a file."},"vscord.status.image.small.editing.key":{"type":"string","default":"https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/{app_id}.png","description":"The image url to use when editting a file."},"vscord.status.image.small.editing.text":{"type":"string","default":"{app_name}","description":"The small text to show when editting a file."},"vscord.status.image.small.debugging.key":{"type":"string","default":"https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/debugging.png","description":"The image url to use when debugging."},"vscord.status.image.small.debugging.text":{"type":"string","default":"{app_name}","description":"The small text to show when debugging."},"vscord.status.image.small.notInFile.key":{"type":"string","default":"https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/idle.png","description":"The image url to use when you are not in a file."},"vscord.status.image.small.notInFile.text":{"type":"string","default":"Snoozin...","description":"The small text to show when you are not in a file."}}},{"title":"Buttons","properties":{"vscord.status.buttons.button1.enabled":{"type":"boolean","default":true},"vscord.status.buttons.button1.active.enabled":{"type":"boolean","default":false},"vscord.status.buttons.button1.active.label":{"type":"string","default":"Active Label Button 1","minLength":1},"vscord.status.buttons.button1.active.url":{"type":"string","default":"https://www.youtube.com/watch?v=dQw4w9WgXcQ","minLength":1},"vscord.status.buttons.button1.inactive.enabled":{"type":"boolean","default":false},"vscord.status.buttons.button1.inactive.label":{"type":"string","default":"Inactive Label Button 1","minLength":1},"vscord.status.buttons.button1.inactive.url":{"type":"string","default":"https://www.youtube.com/watch?v=dQw4w9WgXcQ","minLength":1},"vscord.status.buttons.button1.idle.enabled":{"type":"boolean","default":false},"vscord.status.buttons.button1.idle.label":{"type":"string","default":"Idle Label Button 1","minLength":1},"vscord.status.buttons.button1.idle.url":{"type":"string","default":"https://www.youtube.com/watch?v=dQw4w9WgXcQ","minLength":1},"vscord.status.buttons.button1.git.active.enabled":{"type":"boolean","default":true},"vscord.status.buttons.button1.git.active.label":{"type":"string","default":"View Repository","minLength":1},"vscord.status.buttons.button1.git.active.url":{"type":"string","default":"{git_url}","minLength":1},"vscord.status.buttons.button1.git.inactive.enabled":{"type":"boolean","default":true},"vscord.status.buttons.button1.git.inactive.label":{"type":"string","default":"View Repository","minLength":1},"vscord.status.buttons.button1.git.inactive.url":{"type":"string","default":"{git_url}","minLength":1},"vscord.status.buttons.button1.git.idle.enabled":{"type":"boolean","default":true,"minLength":1},"vscord.status.buttons.button1.git.idle.label":{"type":"string","default":"View Repository","minLength":1},"vscord.status.buttons.button1.git.idle.url":{"type":"string","default":"{git_url}","minLength":1},"vscord.status.buttons.button2.enabled":{"type":"boolean","default":false},"vscord.status.buttons.button2.active.enabled":{"type":"boolean","default":false},"vscord.status.buttons.button2.active.label":{"type":"string","default":"Active Label Button 2","minLength":1},"vscord.status.buttons.button2.active.url":{"type":"string","default":"https://www.youtube.com/watch?v=dQw4w9WgXcQ","minLength":1},"vscord.status.buttons.button2.inactive.enabled":{"type":"boolean","default":false},"vscord.status.buttons.button2.inactive.label":{"type":"string","default":"Inactive Label Button 2","minLength":1},"vscord.status.buttons.button2.inactive.url":{"type":"string","default":"https://www.youtube.com/watch?v=dQw4w9WgXcQ","minLength":1},"vscord.status.buttons.button2.idle.enabled":{"type":"boolean","default":false},"vscord.status.buttons.button2.idle.label":{"type":"string","default":"Idle Label Button 2","minLength":1},"vscord.status.buttons.button2.idle.url":{"type":"string","default":"https://www.youtube.com/watch?v=dQw4w9WgXcQ","minLength":1},"vscord.status.buttons.button2.git.active.enabled":{"type":"boolean","default":false},"vscord.status.buttons.button2.git.active.label":{"type":"string","default":"Git Active Label Button 2","minLength":1},"vscord.status.buttons.button2.git.active.url":{"type":"string","default":"https://www.youtube.com/watch?v=dQw4w9WgXcQ","minLength":1},"vscord.status.buttons.button2.git.inactive.enabled":{"type":"boolean","default":false},"vscord.status.buttons.button2.git.inactive.label":{"type":"string","default":"Git Inactive Label Button 2","minLength":1},"vscord.status.buttons.button2.git.inactive.url":{"type":"string","default":"https://www.youtube.com/watch?v=dQw4w9WgXcQ","minLength":1},"vscord.status.buttons.button2.git.idle.enabled":{"type":"boolean","default":false},"vscord.status.buttons.button2.git.idle.label":{"type":"string","default":"Git Idle Label Button 2","minLength":1},"vscord.status.buttons.button2.git.idle.url":{"type":"string","default":"https://www.youtube.com/watch?v=dQw4w9WgXcQ","minLength":1}}},{"title":"Misc","type":"object","properties":{"vscord.file.size.round":{"type":"number","default":2,"description":"The number of decimal places to round the file size to."},"vscord.file.size.spacer":{"type":"string","default":" ","description":"Spacer between the number and the unit."},"vscord.behaviour.additionalFileMapping":{"type":"object","default":{},"additionalProperties":{"type":"string"},"description":"Additional regex to check for language, key is regex and value is the language."},"vscord.behaviour.suppressNotifications":{"type":"boolean","default":false,"description":"Suppresses all notifications from the extension."},"vscord.behavoiur.prioritizeLanguagesOverExtensions":{"type":"boolean","default":false,"description":"Prioritize language defined by editor over file extension when determining the language for the file."},"vscord.file.size.humanReadable":{"type":"boolean","default":true,"description":"If true, the file size will be displayed in a human readable format (e.g. 1.2 MB). If false, the file size will be displayed in bytes."},"vscord.file.size.standard":{"type":"string","enum":["iec","jedec"],"default":"iec","description":"The unit standard to use when displaying the file size."}}},{"title":"Advanced","type":"object","properties":{"vscord.behaviour.debug":{"type":"boolean","default":false,"description":"Enable debug mode"}}},{"title":"@Deprecated","type":"object","properties":{"rpc.id":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.app.id#` instead.","deprecationMessage":"Deprecated: Please use vscord.app.id instead."},"rpc.appName":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.app.name#` instead.","deprecationMessage":"Deprecated: Please use vscord.app.name instead."},"rpc.enabled":{"type":"boolean","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.enabled#` instead.","deprecationMessage":"Deprecated: Please use vscord.enabled instead."},"rpc.detailsEditing":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.details.text.editing#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.details.text.editing instead."},"rpc.detailsIdling":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.details.text.idle#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.details.text.idle instead."},"rpc.detailsDebugging":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.details.text.debugging#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.details.text.debugging instead."},"rpc.detailsViewing":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.details.text.viewing#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.details.text.viewing instead."},"rpc.lowerDetailsEditing":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.state.text.editing#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.state.text.editing instead."},"rpc.lowerDetailsIdling":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.state.text.idle#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.state.text.idle instead."},"rpc.lowerDetailsDebugging":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.state.text.debugging#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.state.text.debugging instead."},"rpc.lowerDetailsViewing":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.state.text.viewing#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.state.text.viewing instead."},"rpc.lowerDetailsNoWorkspaceFound":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.state.text.noWorkspaceFound#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.state.text.noWorkspaceFound instead."},"rpc.baseImageLink":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.image#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.image instead."},"rpc.largeImage":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.image#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.image instead."},"rpc.largeImageIdling":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.image.small.idle.key#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.image.small.idle.key instead."},"rpc.smallImage":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.image.small#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.image.small instead."},"rpc.removeElapsedTime":{"type":"boolean","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.showElapsedTime#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.showElapsedTime instead."},"rpc.removeDetails":{"type":"boolean","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.details.enabled#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.details.enabled instead."},"rpc.removeLowerDetails":{"type":"boolean","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.details#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.details instead."},"rpc.removeLowerDetailsIdling":{"type":"boolean","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.details.text.idle#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.details.text.idle instead."},"rpc.showProblems":{"type":"boolean","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.problems.enabled#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.problems.enabled instead."},"rpc.problemsText":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.problems.text#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.problems.text instead."},"rpc.ignoreWorkspaces":{"type":"array","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.ignore.workspaces#` instead.","deprecationMessage":"Deprecated: Please use vscord.ignore.workspaces instead."},"rpc.ignoreWorkspacesText":{"type":["string","object"],"markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.ignore.workspacesText#` instead.","deprecationMessage":"Deprecated: Please use vscord.ignore.workspacesText instead."},"rpc.checkIdle":{"type":"boolean","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.idle.enabled#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.idle.enabled instead."},"rpc.disconnectOnIdle":{"type":"boolean","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.idle.disconnectOnIdle#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.idle.disconnectOnIdle instead."},"rpc.resetElapsedTimeAfterIdle":{"type":"boolean","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.idle.resetElapsedTime#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.idle.resetElapsedTime instead."},"rpc.idleTimeout":{"type":"number","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.idle.timeout#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.idle.timeout instead."},"rpc.idleText":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.image.small.idle.text#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.image.small.idle.text instead."},"rpc.buttonEnabled":{"type":"boolean","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.buttons.button1.enabled#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.buttons.button1.enabled instead."},"rpc.buttonActiveLabel":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.buttons.button1.active.label#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.buttons.button1.active.label instead."},"vscord.status.button.active.enabled":{"type":"boolean","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.buttons.button1.git.enabled#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.buttons.button1.git.label instead."},"vscord.status.button.active.label":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.buttons.button1.git.label#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.buttons.button1.git.label instead."},"vscord.status.button.active.url":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.buttons.button1.git.url#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.buttons.button1.git.url instead."},"vscord.status.button.idle.enabled":{"type":"boolean","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.buttons.button1.idle.enabled#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.buttons.button1.idle.label instead."},"vscord.status.button.idle.label":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.buttons.button1.idle.label#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.buttons.button1.idle.label instead."},"vscord.status.button.idle.url":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.buttons.button1.idle.url#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.buttons.button1.idle.url instead."},"vscord.status.button.inactive.enabled":{"type":"boolean","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.buttons.button1.inactive.enabled#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.buttons.button1.inactive.label instead."},"vscord.status.button.inactive.label":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.buttons.button1.inactive.label#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.buttons.button1.inactive.label instead."},"vscord.status.button.inactive.url":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.buttons.button1.inactive.url#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.buttons.button1.inactive.url instead."},"rpc.buttonActiveUrl":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.buttons.button1.active.url#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.buttons.button1.active.url instead."},"rpc.buttonInactiveLabel":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.buttons.button1.inactive.label#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.buttons.button1.inactive.label instead."},"rpc.buttonInactiveUrl":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.status.buttons.button1.inactive.url#` instead.","deprecationMessage":"Deprecated: Please use vscord.status.buttons.button1.inactive.url instead."},"rpc.ignoreRepositories":{"type":"array","items":{"type":"string"},"markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.ignore.repositories#` instead.","deprecationMessage":"Deprecated: Please use vscord.ignore.repositories instead."},"rpc.ignoreOrganizations":{"type":"array","items":{"type":"string"},"markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.ignore.organizations#` instead.","deprecationMessage":"Deprecated: Please use vscord.ignore.organizations instead."},"rpc.ignoreGitHosts":{"type":"array","items":{"type":"string"},"markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.ignore.gitHosts#` instead.","deprecationMessage":"Deprecated: Please use vscord.ignore.gitHosts instead."},"rpc.suppressNotifications":{"type":"boolean","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.behaviour.suppressNotifications#` instead.","deprecationMessage":"Deprecated: Please use vscord.behaviour.suppressNotifications instead."},"rpc.prioritizeLanguagesOverExtensions":{"type":"boolean","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.behaviour.prioritizeLanguagesOverExtensions#` instead.","deprecationMessage":"Deprecated: Please use vscord.behaviour.prioritizeLanguagesOverExtensions instead."},"rpc.fileSizeHumanReadable":{"type":"boolean","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.behaviour.size.humanReadable#` instead.","deprecationMessage":"Deprecated: Please use vscord.behaviour.size.humanReadable instead."},"rpc.fileSizeSpec":{"type":"string","enum":["si","iec","jedec"],"markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.file.size.standard#` instead.","deprecationMessage":"Deprecated: Please use vscord.file.size.standard instead."},"rpc.fileSizeFixed":{"type":"number","markdownDeprecationMessage":"**Deprecated**","deprecationMessage":"Deprecated"},"rpc.fileSizeSpacer":{"type":"string","markdownDeprecationMessage":"**Deprecated**: Please use `#vscord.file.size.spacer#` instead.","deprecationMessage":"Deprecated: Please use vscord.file.size.spacer instead."}}}]},"packageManager":"pnpm@8.6.0"},"location":{"$mid":1,"path":"/home/koneko/.vscode/extensions/leonardssh.vscord-5.1.10","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"20675c06-f272-4cc8-8611-83ebb5583c5a","publisherId":"2c34273e-24b8-499a-b859-8e27e48decc5","publisherDisplayName":"leonardssh","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1685877535232,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"esbenp.prettier-vscode","uuid":"96fa4707-6983-4489-b7c5-d5ffdfdcce90"},"manifest":{"name":"prettier-vscode","displayName":"Prettier - Code formatter","description":"Code formatter using prettier","version":"9.13.0","publisher":"esbenp","author":"Prettier <@prettiercode>","galleryBanner":{"color":"#ffe04b","theme":"light"},"sponsor":{"url":"https://opencollective.com/prettier"},"homepage":"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode","repository":{"type":"git","url":"https://github.com/prettier/prettier-vscode.git"},"license":"MIT","bugs":{"url":"https://github.com/prettier/prettier-vscode/issues"},"engines":{"vscode":"^1.60.0"},"keywords":["multi-root ready","prettier","formatter","javascript","handlebars","js","jsx","flow","typescript","ts","json","css","less","scss","styled-components","styled-jsx","markdown","md","commonmark","mdx","php","pug","ruby","swift","html","vue","ember","glimmer","angular","graphql","yaml","yml"],"categories":["Formatters"],"activationEvents":["onStartupFinished"],"icon":"icon.png","main":"./dist/extension","browser":"./dist/web-extension","scripts":{"clean":"node ./scripts/clean.js","lint":"eslint -c .eslintrc.js --ext .ts .","pretest":"yarn test-compile && cd test-fixtures/plugins && yarn install && cd ../plugins-pnpm && pnpm i && cd ../outdated && yarn install && cd ../module && yarn install && cd ../specific-version && yarn install && cd ../explicit-dep && yarn install && cd implicit-dep && yarn install && cd ../../v3 && yarn install","prettier":"prettier --write '**/*.{ts,json,md,hbs,yml,js}'","test-compile":"yarn clean && tsc -p ./ && yarn webpack","test":"node ./out/test/runTests.js","version":"node ./scripts/version.js && git add CHANGELOG.md","vscode:prepublish":"webpack --mode production","watch":"tsc --watch -p ./","webpack-dev":"webpack --mode development --watch","webpack":"webpack --mode development","postinstall":"husky install","chrome":"yarn webpack && vscode-test-web --browserType=chromium --extensionDevelopmentPath=. ."},"lint-staged":{"**/*.{ts,json,md,yml,hbs,js}":["prettier --write"],"src/**/*.ts":["eslint -c .eslintrc.js --ext .ts ."]},"devDependencies":{"@types/fs-extra":"^11.0.1","@types/glob":"^7.2.0","@types/mocha":"^10.0.0","@types/node":"16.11.17","@types/prettier":"^2.7.2","@types/resolve":"^1.20.1","@types/semver":"^7.3.13","@types/sinon":"^10.0.11","@types/tmp":"^0.2.3","@types/vscode":"^1.60.0","@typescript-eslint/eslint-plugin":"^5.45.0","@typescript-eslint/parser":"^5.45.0","@vscode/test-electron":"^2.1.3","@vscode/test-web":"^0.0.30","eslint":"^8.31.0","eslint-config-prettier":"^8.5.0","fs-extra":"^11.1.1","glob":"^7.2.0","husky":"^8.0.3","lint-staged":"^13.1.0","mocha":"^10.0.0","path-browserify":"^1.0.1","process":"^0.11.10","sinon":"^13.0.1","tmp":"^0.2.1","ts-loader":"^9.4.2","typescript":"^4.6.3","util":"^0.12.4","vsce":"^2.15.0","vscode-nls-dev":"^4.0.3","webpack":"^5.75.0","webpack-cli":"^5.0.1"},"dependencies":{"find-up":"5.0.0","prettier":"^2.8.8","resolve":"^1.22.2","semver":"^7.5.0","vscode-nls":"^5.2.0"},"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":"limited","description":"Only the built-in version of Prettier will be used when running in untrusted mode.","restrictedConfigurations":["prettier.documentSelectors","prettier.resolveGlobalModules","prettier.ignorePath","prettier.prettierPath","prettier.configPath","prettier.useEditorConfig","prettier.resolveGlobalModules","prettier.withNodeModules"]}},"contributes":{"configuration":{"type":"object","title":"Prettier","properties":{"prettier.disableLanguages":{"type":"array","items":{"type":"string"},"deprecationMessage":"This feature is no longer supported. Instead, configure VS Code [default formatters](https://github.com/prettier/prettier-vscode#default-formatter) or use .prettierignore.","markdownDescription":"A list of languages IDs to disable this extension on.","scope":"window"},"prettier.documentSelectors":{"type":"array","items":{"type":"string"},"markdownDescription":"A list of [glob patterns](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) to register Prettier formatter.","scope":"window"},"prettier.enable":{"type":"boolean","default":true,"markdownDescription":"Controls whether Prettier is enabled or not.","scope":"resource"},"prettier.requireConfig":{"type":"boolean","default":false,"markdownDescription":"Require a prettier configuration file to format. See [documentation for valid configuration files](https://prettier.io/docs/en/configuration.html).\n\n> _Note, untitled files will still be formatted using the VS Code prettier settings even when this setting is set._","scope":"resource"},"prettier.resolveGlobalModules":{"type":"boolean","default":false,"markdownDescription":"When enabled, this extension will attempt to use global npm or yarn modules if local modules cannot be resolved.\n> _This setting can have a negative performance impact, particularly on Windows when you have attached network drives. Only enable this if you must use global modules._","scope":"resource"},"prettier.withNodeModules":{"type":"boolean","default":false,"markdownDescription":"This extension will process files in `node_modules`.","scope":"resource"},"prettier.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","deprecationMessage":"Package manager is now automatically detected by VS Code. This setting is no longer used.","markdownDescription":"The package manager you use to install node modules."},"prettier.useEditorConfig":{"type":"boolean","default":true,"markdownDescription":"Whether or not to take `.editorconfig` into account when parsing configuration. See the [`prettier.resolveConfig`](https://prettier.io/docs/en/api.html) docs for details.","scope":"resource"},"prettier.ignorePath":{"type":"string","default":".prettierignore","markdownDescription":"Path to a `.prettierignore` file.","scope":"resource"},"prettier.prettierPath":{"type":"string","markdownDescription":"Path to the `prettier` module, eg: `./node_modules/prettier`.","scope":"resource"},"prettier.configPath":{"type":"string","markdownDescription":"Path to the prettier configuration file.","scope":"resource"},"prettier.enableDebugLogs":{"type":"boolean","default":false,"markdownDescription":"Enable debug logs for troubleshooting.","scope":"resource"},"prettier.printWidth":{"type":"integer","default":80,"markdownDescription":"Fit code within this line limit.","scope":"resource"},"prettier.tabWidth":{"type":"integer","default":2,"markdownDescription":"Number of spaces it should use per tab.","scope":"resource"},"prettier.singleQuote":{"type":"boolean","default":false,"markdownDescription":"Use single instead of double quotes.","scope":"resource"},"prettier.trailingComma":{"type":"string","enum":["none","es5","all"],"default":"es5","markdownDescription":"Controls the printing of trailing commas wherever possible. \nValid options:\n- `none` - No trailing commas\n- `es5` - Trailing commas where valid in ES5 (objects, arrays, etc)\n- `all` - Trailing commas wherever possible (function arguments)","scope":"resource"},"prettier.bracketSpacing":{"type":"boolean","default":true,"markdownDescription":"Controls the printing of spaces inside object literals.","scope":"resource"},"prettier.singleAttributePerLine":{"type":"boolean","default":false,"markdownDescription":"Enforces single attribute per line in HTML, JSX, Vue and Angular.","scope":"resource"},"prettier.bracketSameLine":{"type":"boolean","default":false,"markdownDescription":"Puts the `>` of a multi-line HTML (HTML, JSX, Vue, Angular) element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).","scope":"resource"},"prettier.jsxBracketSameLine":{"type":"boolean","default":false,"markdownDescription":"Puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).","deprecationMessage":"This option has been deprecated in v2.4.0, use `bracketSameLine` instead.","scope":"resource"},"prettier.semi":{"type":"boolean","default":true,"markdownDescription":"Whether to add a semicolon at the end of every line.","scope":"resource"},"prettier.requirePragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can restrict itself to only format files that contain a special comment, called a pragma, at the top of the file. This is very useful when gradually transitioning large, unformatted codebases to prettier.","scope":"resource"},"prettier.insertPragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can insert a special `@format` marker at the top of files specifying that the file has been formatted with prettier. This works well when used in tandem with the `--require-pragma` option. If there is already a docblock at the top of the file then this option will add a newline to it with the `@format` marker.","scope":"resource"},"prettier.useTabs":{"type":"boolean","default":false,"markdownDescription":"Indent lines with tabs.","scope":"resource"},"prettier.proseWrap":{"type":"string","enum":["preserve","always","never"],"default":"preserve","markdownDescription":"(Markdown) wrap prose over multiple lines.","scope":"resource"},"prettier.arrowParens":{"type":"string","enum":["avoid","always"],"default":"always","markdownDescription":"Include parentheses around a sole arrow function parameter.","scope":"resource"},"prettier.jsxSingleQuote":{"type":"boolean","default":false,"markdownDescription":"Use single quotes instead of double quotes in JSX.","scope":"resource"},"prettier.htmlWhitespaceSensitivity":{"type":"string","enum":["css","strict","ignore"],"default":"css","markdownDescription":"Specify the global [whitespace sensitivity](https://prettier.io/blog/2018/11/07/1.15.0.html#whitespace-sensitive-formatting) for HTML files.\nValid options:\n- `css` - Respect the default value of CSS `display` property.\n- `strict` - Whitespaces are considered sensitive.\n- `ignore` - Whitespaces are considered insensitive.","scope":"resource"},"prettier.vueIndentScriptAndStyle":{"type":"boolean","default":false,"markdownDescription":"Whether or not to indent the code inside `<script>` and `<style>` tags in Vue SFC files.","scope":"resource"},"prettier.endOfLine":{"type":"string","enum":["auto","lf","crlf","cr"],"default":"lf","markdownDescription":"Specify the end of line used by prettier.","scope":"resource"},"prettier.quoteProps":{"type":"string","enum":["as-needed","consistent","preserve"],"default":"as-needed","markdownDescription":"Change when properties in objects are quoted.\nValid options:\n- `\"as-needed\"` - Only add quotes around object properties where required.\n- `\"consistent\"` - If at least one property in an object requires quotes, quote all properties.\n- `\"preserve\"` - Respect the input use of quotes in object properties.","scope":"resource"},"prettier.embeddedLanguageFormatting":{"type":"string","enum":["auto","off"],"default":"auto","markdownDescription":"Control whether Prettier formats quoted code embedded in the file.","scope":"resource"}}},"jsonValidation":[{"fileMatch":".prettierrc","url":"https://json.schemastore.org/prettierrc"},{"fileMatch":".prettierrc.json","url":"https://json.schemastore.org/prettierrc"},{"fileMatch":"package.json","url":"./package-json-schema.json"}],"languages":[{"id":"json","filenames":[".prettierrc"]},{"id":"ignore","filenames":[".prettierignore"]},{"id":"graphql","extensions":[".graphql"]},{"id":"vue","extensions":[".vue"]},{"id":"handlebars","extensions":[".hbs",".handlebars"]}],"commands":[{"command":"prettier.createConfigFile","title":"Prettier: Create Configuration File"},{"command":"prettier.forceFormatDocument","title":"Format Document (Forced)","when":"editorFocus"}]}},"location":{"$mid":1,"path":"/home/koneko/.vscode/extensions/esbenp.prettier-vscode-9.13.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"96fa4707-6983-4489-b7c5-d5ffdfdcce90","publisherId":"d16f4e39-2ffb-44e3-9c0d-79d873570e3a","publisherDisplayName":"Prettier","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"installedTimestamp":1685884383491,"preRelease":false},"isValid":true,"validations":[]}]}